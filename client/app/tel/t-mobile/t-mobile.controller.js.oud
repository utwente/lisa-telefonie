'use strict';

angular.module('ictsAppApp')
  .controller('TelTMobileCtrl', function ($scope, $http, $modal) {

    $scope.step = 'Invoeren T-mobile';

    $scope.openTmobile = function($fileContent){

      // --------------------------------------
      //   FILE READING AND CSV PARSING STUFF
      // --------------------------------------
      $fileContent = $fileContent.replace(/\",\"/g, ";");
      $fileContent = $fileContent.replace(/\"/g, "");
      var lines = $fileContent.split('\n');
      if (lines[1].indexOf('Groep;Naam;MSISDN;Specificatie;Datum;Starttijd;Type;Bestemming;Land/Netwerk;Duur/Volume;Uit bundel*;Kosten;') == -1) {
        console.log('no valid t-mobile file..');
        return;
      }
      var parsedDate = lines[0].match(/\d{2}\.\d{2}\.\d{2}/)[0].split('\.');
      var month = new Date('20' + parsedDate[2], parseInt(parsedDate[1]) - 1);
      $scope.step = 'Overzicht ' + month.getMonthName() + ' ' + month.getFullYear();

      lines.splice(0,2);
      lines.splice(lines.length - 2, 2);
      var csv = lines.join('\n');

      $scope.$apply($scope.hideInput = true);

      var csvContent = Papa.parse(csv, {delimiter: ";"});

      // --------------------------------------
      //   CALCULATE COSTS PER PHONE NUMBER
      // --------------------------------------

      var t_mobile = {
        month: month,
        summary: {
          totalTime: 0,
          totalSMS: 0,
          totalKB: 0,
          totalCosts: 0,
          perType: {}
        },
        numberObject: {}
      };
      var call;
      var key;
      var number;
      var costs;
      var time;

      for (var i = csvContent.data.length - 1; i >= 0; i--) {


        call = csvContent.data[i];  // complete call data
        number = call[2];           // phone number
        key = call[3].toCamel();    // type of call
        type = call[6];             // type of communication (landline/mobile/sms/data)


        // if phone number does not exist, create it
        if (t_mobile.numberObject[number] === undefined) {
          t_mobile.numberObject[number] = {
            summary: {
              perType: {},
              totalCosts: 0,
              totalTime: 0
            },
            calls: {}
          }
        }

        // if type of "call" does not exist, create it.
        if (t_mobile.numberObject[number].summary.perType[key] === undefined) {
          t_mobile.numberObject[number].summary.perType[key] = {costs: 0};
        }
        if (t_mobile.summary.perType[key] === undefined) {
          t_mobile.summary.perType[key] = {costs: 0};
        }

        // --------------------------------------
        //  CALCULATE COSTS FOR ALL "CALL" TYPES
        // --------------------------------------

        costs = parseInt(call[11].replace(',',''));

        if (isNaN(costs))
          costs = 0;

        t_mobile.numberObject[number].summary.perType[key].costs = t_mobile.numberObject[number].summary.perType[key].costs + costs;
        t_mobile.numberObject[number].summary.totalCosts = t_mobile.numberObject[number].summary.totalCosts + costs;

        t_mobile.summary.totalCosts = t_mobile.summary.totalCosts + costs;
        t_mobile.summary.perType[key].costs = t_mobile.summary.perType[key].costs + costs;


        // --------------------------------------
        //   CALCULATE LANDLINE COSTS
        // --------------------------------------
        if ((type == 'binnenNederland') || (key == 'vastNaarGebruikersgroep') || (key == 'vastNaarOverigeMobieleNummers') || (key ==  'vastNaarVasteNummers') || (key == 'vastNaarInternationaleNummers') || (key == 'vastNaarServicenummers')){
          // add time to sumary
          if (t_mobile.numberObject[number].summary.perType[key].time === undefined) {
            t_mobile.numberObject[number].summary.perType[key].time = 0;
          }
          if (t_mobile.summary.perType[key].time === undefined) {
            t_mobile.summary.perType[key].time = 0;
          }

          time = call[9].split(':');
          time = parseInt(time[0])*60 + parseInt(time[1]);

          t_mobile.numberObject[number].summary.perType[key].time = t_mobile.numberObject[number].summary.perType[key].time + time;
          t_mobile.numberObject[number].summary.totalTime = t_mobile.numberObject[number].summary.totalTime + time;
          t_mobile.summary.perType[key].time = t_mobile.summary.perType[key].time + time;
          t_mobile.summary.totalTime = t_mobile.summary.totalTime + time;

          // save call
          if (t_mobile.numberObject[number].calls[key] === undefined) {
            t_mobile.numberObject[number].calls[key] = [];
          }
          t_mobile.numberObject[number].calls[key].push({
            datum: call[4].replace(/\./g,'-'),
            starttijd: call[5],
            duur: call[9],
            bestemming: call[7],
            type: call[6],
            kosten: call[11]
          })

        }

        // --------------------------------------
        //   CALCULATE COSTS IN THE NETHERLANDS
        // --------------------------------------
        if ((key == 'vasteNummers') || (key == 't-mobileNummers') || (key == 'overigeMobieleNummers') || (key ==  'groepsgesprekken') || (key == 'servicenummers') || (key == 'klantenserviceT-mobile') || (key == 'videoTelefonie')){
          // add time to sumary
          if (t_mobile.numberObject[number].summary.perType[key].time === undefined) {
            t_mobile.numberObject[number].summary.perType[key].time = 0;
          }
          if (t_mobile.summary.perType[key].time === undefined) {
            t_mobile.summary.perType[key].time = 0;
          }

          time = call[9].split(':');
          time = parseInt(time[0])*60 + parseInt(time[1]);

          t_mobile.numberObject[number].summary.perType[key].time = t_mobile.numberObject[number].summary.perType[key].time + time;
          t_mobile.numberObject[number].summary.totalTime = t_mobile.numberObject[number].summary.totalTime + time;
          t_mobile.summary.perType[key].time = t_mobile.summary.perType[key].time + time;
          t_mobile.summary.totalTime = t_mobile.summary.totalTime + time;

          // save call
          if (t_mobile.numberObject[number].calls[key] === undefined) {
            t_mobile.numberObject[number].calls[key] = [];
          }
          t_mobile.numberObject[number].calls[key].push({
            datum: call[4].replace(/\./g,'-'),
            starttijd: call[5],
            duur: call[9],
            bestemming: call[7],
            type: call[6],
            kosten: call[11]
          })

        }


        // --------------------------------------
        //        CALCULATE COSTS ABROAD
        // --------------------------------------
        if ((key == 'gebeldWordenInHetBuitenland') || (key == 'bellenNaarHetBuitenland') || (key == 'bellenInHetBuitenland')) {
          // add time to sumary
          if (t_mobile.numberObject[number].summary.perType[key].time === undefined) {
            t_mobile.numberObject[number].summary.perType[key].time = 0;
          }
          if (t_mobile.summary.perType[key].time === undefined) {
            t_mobile.summary.perType[key].time = 0;
          }
          time = call[9].split(':');
          time = parseInt(time[0])*60 + parseInt(time[1]);

          t_mobile.numberObject[number].summary.perType[key].time = t_mobile.numberObject[number].summary.perType[key].time + time;
          t_mobile.numberObject[number].summary.totalTime = t_mobile.numberObject[number].summary.totalTime + time;
          t_mobile.summary.perType[key].time = t_mobile.summary.perType[key].time + time;
          t_mobile.summary.totalTime = t_mobile.summary.totalTime + time;

          // save call
          if (t_mobile.numberObject[number].calls[key] === undefined) {
            t_mobile.numberObject[number].calls[key] = [];
          }
          t_mobile.numberObject[number].calls[key].push({
            datum: call[4].replace(/\./g,'-'),
            starttijd: call[5],
            duur: call[9],
            bestemming: call[7],
            type: call[6],
            kosten: call[11],
            land: call[8]
          })
        }

        // --------------------------------------
        //       CALCULATE INTERNET STUFF
        // --------------------------------------
        if ((key == 'internet') || (key == 'internetInHetBuitenland')) {
          // add time to sumary
          if (t_mobile.numberObject[number].summary.perType[key].data === undefined) {
            t_mobile.numberObject[number].summary.perType[key].data = 0;
          }
          if (t_mobile.summary.perType[key].data === undefined) {
            t_mobile.summary.perType[key].data = 0;
          }

          t_mobile.numberObject[number].summary.perType[key].data = t_mobile.numberObject[number].summary.perType[key].data + parseInt(call[9]);
          t_mobile.summary.perType[key].data = t_mobile.summary.perType[key].data + parseInt(call[9]);
          t_mobile.summary.totalKB = t_mobile.summary.totalKB + parseInt(call[9]);
        }

        // --------------------------------------
        //          CALCULATE SMS STUFF
        // --------------------------------------
        if ((key == 'sms-berichten') || (key == 'sms-diensten') || (key == 'mms-berichten') || (key == 'berichtenVerstuurdInHetBuitenland') || (key == 'berichtenVerstuurdNaarHetBuitenland')) {
          // add time to sumary
          if (t_mobile.numberObject[number].summary.perType[key].amount === undefined) {
            t_mobile.numberObject[number].summary.perType[key].amount = 0;
          }
          if (t_mobile.summary.perType[key].amount === undefined) {
            t_mobile.summary.perType[key].amount = 0;
          }

          t_mobile.numberObject[number].summary.perType[key].amount = t_mobile.numberObject[number].summary.perType[key].amount + 1;
          t_mobile.summary.perType[key].amount = t_mobile.summary.perType[key].amount + 1;
          t_mobile.summary.totalSMS = t_mobile.summary.totalSMS + 1;
        }

      };

      var costsData = [];
      var timeData = [];
      var dataData = [];
      var smsData = [];
      for (var type in t_mobile.summary.perType) {
        costsData.push({label: type.toNormal(), value: t_mobile.summary.perType[type].costs/100});
        if (t_mobile.summary.perType[type].time !== undefined){
          timeData.push({label: type.toNormal(), value: Math.round(t_mobile.summary.perType[type].time/60)})
        }
        if (t_mobile.summary.perType[type].data !== undefined){
          dataData.push({label: type.toNormal(), value: Math.round(t_mobile.summary.perType[type].data/1000000)})
        }
        if (t_mobile.summary.perType[type].amount !== undefined){
          smsData.push({label: type.toNormal(), value: Math.round(t_mobile.summary.perType[type].amount)})
        }
      }
      
      $scope.$apply($scope.donuts = [
        {title: 'Kosten', id: 'tel-costs-donut', total: '€' + t_mobile.summary.totalCosts/100},
        {title: 'Bellen', id: 'tel-time-donut', total: Math.round(t_mobile.summary.totalTime/3600) + ' uur'},
        {title: 'Data', id: 'tel-data-donut', total: Math.round(t_mobile.summary.totalKB/1000000) + ' GB'},
        {title: 'Berichten', id: 'tel-sms-donut', total: t_mobile.summary.totalSMS}
      ]);
      $scope.$apply($scope.showResults = true);

      Morris.Donut({element: 'tel-costs-donut', data: costsData, formatter: function (y) { return '€' + y }});
      Morris.Donut({element: 'tel-time-donut', data: timeData, 
        formatter: function (y) { 
          if (Math.round(y/3600) == 0) {
            if (Math.round(y/60) == 0) {
              return y + ' sec.';
            } else {
              return Math.round(y/60) + ' min.';
            }
          } else {
            return Math.round(y/3600) + ' uur';
          }
        }
      });
      Morris.Donut({element: 'tel-data-donut', data: dataData, formatter: function (y) { return y + ' GB' }});
      Morris.Donut({element: 'tel-sms-donut', data: smsData});

      $scope.$apply($scope.data = {
        totalTime: Math.round(t_mobile.summary.totalTime/3600) + ' uur',
        totalSMS: t_mobile.summary.totalSMS,
        totalData: Math.round(t_mobile.summary.totalKB/1000000) + ' GB',
        totalCosts: '€' + t_mobile.summary.totalCosts/100
      });

      t_mobile.numbers = [];
      for (key in t_mobile.numberObject) {
        t_mobile.numbers.push({
          number: key, 
          calls: t_mobile.numberObject[key].calls,
          summary: t_mobile.numberObject[key].summary
        });
      }
      delete t_mobile.numberObject;
      $scope.t_mobile = t_mobile;
      console.log(t_mobile);
    };

    $scope.saveMonth = function() {
      $scope.loading = true;
      $http.post('api/t_mobile', {
        t_mobile: $scope.t_mobile
      }).success(function (data, status, headers, config) {
        if (data.success) {
          console.log('Maand opgeslagen!');
        } else if (data.error) {
          if (data.msg == 'month_exists') {
            console.log('Maand bestaat al..');
            $scope.overrideMonthModal(data.id);
          } else {
            console.log('Onbekende fout..');
          }
        } else {
          console.log('Onbekende fout..');
        }
        $scope.loading = false;
      }).error(function (data, status, headers, config) {
        console.log('Fout bij het opslaan..');
        scope.loading = false;
      });
    };

    $scope.updateMonth = function(id) {
      $http.put('/api/t_mobile/' + id, $scope.t_mobile)
        .success(function (data, status, headers, config) {
            console.log('Maand overschreven');
        });
    }

    $scope.overrideMonthModal = function (id) {
      var modalInstance = $modal.open({
        templateUrl: 'app/tel/t-mobile/t-mobileOverride.modal.html',
        controller: 'TMobileOverrideModalCtrl',
        scope: $scope,
        resolve: {
          id: function () {
            return id;
          }
        }
      });

      modalInstance.result.then(function (id) {
        $scope.updateMonth(id);
      }, function () {
        // Dismissed
      });
    };

  })
